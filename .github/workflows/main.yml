
name: CD

on:
  push:
    branches: [ master ]

jobs:
  build-all-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PYTHON_VERSION: [3.6, 3.7, 3.8]
        PIPENV_VERSION: [2018.11.26, 2020.5.28, 2020.6.2]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: create Dockerfile from template
      run: |
        envsubst < Dockerfile.template > Dockerfile
        if [[ "$PYTHON_VERSION" == 3.8 && "$PIPENV_VERSION" == 2020.6.2 ]]; then
            echo ::set-env name=TAG::${{matrix.PYTHON_VERSION}}-${{matrix.PIPENV_VERSION}},latest
        else
            echo ::set-env name=TAG::${{matrix.PYTHON_VERSION}}-${{matrix.PIPENV_VERSION}}
        fi
      env:
        PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
        PIPENV_VERSION: ${{ matrix.PIPENV_VERSION }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: tolgaeren/pipenv-in-a-container
        tags: ${{ env.TAG }}
  